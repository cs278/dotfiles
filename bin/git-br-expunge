#!/bin/bash

set -e

is_merged() {
	git branch --merged "$MERGE_BASE" | grep --quiet "$1"
}

resolve() {
	( git symbolic-ref -q "${1:-HEAD}" || echo "$1" ) | sed 's,^refs/heads/,,'
}

MERGE_BASE=$(resolve "${1:-HEAD}")

if ! git show $MERGE_BASE > /dev/null 2>&1;
then
	echo "'$MERGE_BASE' is not a valid branch" >&2
	exit 1
fi

echo "Finding branches merged into $MERGE_BASE"

git for-each-ref --sort=committerdate --format="%(refname:short)" refs/heads | while read branch
do
	if is_merged "$branch" && [ "$branch" != "$MERGE_BASE" ];
	then

		git log -n1 --pretty=format:"Delete %Cred$branch%Creset (%C(green)%cr%C(reset))? (n)" "$branch" --

		# Requires bash
		read -s -N 1 -p "" -u 1 answer

		if [ "${answer:-n}" == "y" ];
		then
			# Final sanity check
			git branch -d "$branch" || true
		fi
	fi
done
